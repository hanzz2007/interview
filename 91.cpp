/************************************************************************/
/* 有一个int型数组，每两个相邻的数之间的差值不是1就是-1.现在给定一个数，要求查找这个数在数组中的位置。*/
/************************************************************************/

/************************************************************************/
/* 这题其实有两种解法。1：如果需要频繁查询一个给定的数组，则可以先对数组进行预处理，找到每个峰值
   然后直接将数字和峰值进行比较即可。

   */
/************************************************************************/

#include <vector>
using namespace std;

vector<int> GetNumberPos(int A[], int len, int target){
	vector<int> result;
	for(int i = 0; i < len;){
		int k = target - A[i];
		if(k < 0){
			k = -k;
		}
		if(A[k + i] != target){
			i += k;
		}
		else{
			result.push_back(i);
			i += k;
			++i;
		}
	}
	return result;
}

//int main(){
//	int A[] = {1,2,3,2,3,4,5,4,3,2,3,4,5,6,7,8,9,10,11,12};
//	GetNumberPos(A, sizeof(A) / sizeof(A[0]), 5);
//	return 0;
//}